{
    "sourceFile": "Servidor/models/Company.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1752243348947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752254127228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+const mongoose = require('mongoose');\r\n+const Schema = mongoose.Schema;\r\n+\r\n+// Define a estrutura de um boleto e suas parcelas\r\n+const BoletoSchema = new Schema({\r\n+    id: { type: String, required: true },\r\n+    parentId: { type: String, required: true },\r\n+    name: { type: String, required: true },\r\n+    ownerId: { type: Schema.Types.ObjectId, required: true }, // <<< CAMPO ADICIONADO\r\n+    ownerUsername: { type: String, required: true },\r\n+    parcels: [{\r\n+        id: { type: String, required: true },\r\n+        number: { type: Number, required: true },\r\n+        amount: { type: Number, required: true },\r\n+        dueDate: { type: String, required: true },\r\n+        paid: { type: Boolean, default: false },\r\n+        description: { type: String },\r\n+        barcode: { type: String }\r\n+    }]\r\n+});\r\n+\r\n+// Define a estrutura de um usuário\r\n+const UserSchema = new Schema({\r\n+    username: { type: String, required: true },\r\n+    password: { type: String, required: true },\r\n+    role: { type: String, enum: ['Proprietário', 'Gerente', 'Funcionário'], default: 'Funcionário' },\r\n+    boletos: [BoletoSchema]\r\n+});\r\n+\r\n+// Define a estrutura principal da empresa\r\n+const CompanySchema = new Schema({\r\n+    nomeEmpresa: { type: String, required: true },\r\n+    cnpj: { type: String, required: true, unique: true },\r\n+    senhaEmpresa: { type: String, required: true },\r\n+    usuarios: [UserSchema],\r\n+    permissions: {\r\n+        Gerente: {\r\n+            canCreate: { type: Boolean, default: true },\r\n+            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'all' },\r\n+            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'all' }\r\n+        },\r\n+        Funcionário: {\r\n+            canCreate: { type: Boolean, default: true },\r\n+            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'none' },\r\n+            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'none' }\r\n+        }\r\n+    }\r\n+});\r\n+\r\n+// Exporta o modelo para ser usado em outras partes da aplicação\r\n+module.exports = mongoose.model('Company', CompanySchema);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752269307881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,11 @@\n const mongoose = require('mongoose');\r\n const Schema = mongoose.Schema;\r\n \r\n-// Define a estrutura de um boleto e suas parcelas\r\n-const BoletoSchema = new Schema({\r\n-    id: { type: String, required: true },\r\n-    parentId: { type: String, required: true },\r\n-    name: { type: String, required: true },\r\n-    ownerId: { type: Schema.Types.ObjectId, required: true }, // <<< CAMPO ADICIONADO\r\n-    ownerUsername: { type: String, required: true },\r\n-    parcels: [{\r\n-        id: { type: String, required: true },\r\n-        number: { type: Number, required: true },\r\n-        amount: { type: Number, required: true },\r\n-        dueDate: { type: String, required: true },\r\n-        paid: { type: Boolean, default: false },\r\n-        description: { type: String },\r\n-        barcode: { type: String }\r\n-    }]\r\n-});\r\n-\r\n-// Define a estrutura de um usuário\r\n-const UserSchema = new Schema({\r\n-    username: { type: String, required: true },\r\n-    password: { type: String, required: true },\r\n-    role: { type: String, enum: ['Proprietário', 'Gerente', 'Funcionário'], default: 'Funcionário' },\r\n-    boletos: [BoletoSchema]\r\n-});\r\n-\r\n-// Define a estrutura principal da empresa\r\n const CompanySchema = new Schema({\r\n     nomeEmpresa: { type: String, required: true },\r\n     cnpj: { type: String, required: true, unique: true },\r\n     senhaEmpresa: { type: String, required: true },\r\n-    usuarios: [UserSchema],\r\n     permissions: {\r\n         Gerente: {\r\n             canCreate: { type: Boolean, default: true },\r\n             canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'all' },\r\n@@ -46,56 +18,5 @@\n         }\r\n     }\r\n });\r\n \r\n-// Exporta o modelo para ser usado em outras partes da aplicação\r\n-module.exports = mongoose.model('Company', CompanySchema);\n-const mongoose = require('mongoose');\r\n-const Schema = mongoose.Schema;\r\n-\r\n-// Define a estrutura de um boleto e suas parcelas\r\n-const BoletoSchema = new Schema({\r\n-    id: { type: String, required: true },\r\n-    parentId: { type: String, required: true },\r\n-    name: { type: String, required: true },\r\n-    ownerUsername: { type: String, required: true },\r\n-    parcels: [{\r\n-        id: { type: String, required: true },\r\n-        number: { type: Number, required: true },\r\n-        amount: { type: Number, required: true },\r\n-        dueDate: { type: String, required: true },\r\n-        paid: { type: Boolean, default: false },\r\n-        description: { type: String },\r\n-        barcode: { type: String } \r\n-    }]\r\n-});\r\n-\r\n-// Define a estrutura de um usuário\r\n-const UserSchema = new Schema({\r\n-    username: { type: String, required: true },\r\n-    password: { type: String, required: true },\r\n-    role: { type: String, enum: ['Proprietário', 'Gerente', 'Funcionário'], default: 'Funcionário' },\r\n-    boletos: [BoletoSchema]\r\n-});\r\n-\r\n-// Define a estrutura principal da empresa\r\n-const CompanySchema = new Schema({\r\n-    nomeEmpresa: { type: String, required: true },\r\n-    cnpj: { type: String, required: true, unique: true },\r\n-    senhaEmpresa: { type: String, required: true },\r\n-    usuarios: [UserSchema],\r\n-    permissions: {\r\n-        Gerente: {\r\n-            canCreate: { type: Boolean, default: true },\r\n-            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'all' },\r\n-            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'all' }\r\n-        },\r\n-        Funcionário: {\r\n-            canCreate: { type: Boolean, default: true },\r\n-            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'none' },\r\n-            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'none' }\r\n-        }\r\n-    }\r\n-});\r\n-\r\n-// Exporta o modelo para ser usado em outras partes da aplicação\r\n module.exports = mongoose.model('Company', CompanySchema);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752340348736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,11 @@\n const CompanySchema = new Schema({\r\n     nomeEmpresa: { type: String, required: true },\r\n     cnpj: { type: String, required: true, unique: true },\r\n     senhaEmpresa: { type: String, required: true },\r\n+    telefoneFixo: { type: String, default: '' },\r\n+    telefoneWhatsapp: { type: String, default: '' },\r\n+\r\n     permissions: {\r\n         Gerente: {\r\n             canCreate: { type: Boolean, default: true },\r\n             canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'all' },\r\n"
                },
                {
                    "date": 1752340916229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n const CompanySchema = new Schema({\r\n     nomeEmpresa: { type: String, required: true },\r\n     cnpj: { type: String, required: true, unique: true },\r\n     senhaEmpresa: { type: String, required: true },\r\n+    email: { type: String, default: '' },\r\n     telefoneFixo: { type: String, default: '' },\r\n     telefoneWhatsapp: { type: String, default: '' },\r\n \r\n     permissions: {\r\n"
                },
                {
                    "date": 1752507874515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,19 @@\n     email: { type: String, default: '' },\r\n     telefoneFixo: { type: String, default: '' },\r\n     telefoneWhatsapp: { type: String, default: '' },\r\n \r\n+        subscription: {\r\n+        status: {\r\n+            type: String,\r\n+            enum: ['active', 'inactive', 'trial', 'past_due'], // Status possíveis\r\n+            default: 'inactive' // Uma nova empresa começa como inativa\r\n+        },\r\n+        endDate: {\r\n+            type: Date // Para sabermos quando a assinatura expira\r\n+        }\r\n+    },\r\n+\r\n     permissions: {\r\n         Gerente: {\r\n             canCreate: { type: Boolean, default: true },\r\n             canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'all' },\r\n"
                },
                {
                    "date": 1752508961750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     email: { type: String, default: '' },\r\n     telefoneFixo: { type: String, default: '' },\r\n     telefoneWhatsapp: { type: String, default: '' },\r\n \r\n-        subscription: {\r\n+    subscription: {\r\n         status: {\r\n             type: String,\r\n             enum: ['active', 'inactive', 'trial', 'past_due'], // Status possíveis\r\n             default: 'inactive' // Uma nova empresa começa como inativa\r\n"
                },
                {
                    "date": 1752539441535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,10 @@\n             default: 'inactive' // Uma nova empresa começa como inativa\r\n         },\r\n         endDate: {\r\n             type: Date // Para sabermos quando a assinatura expira\r\n-        }\r\n+        },\r\n+        mercadopagoPreapprovalId: { type: String, default: null }\r\n     },\r\n \r\n     permissions: {\r\n         Gerente: {\r\n"
                },
                {
                    "date": 1752587298932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,10 @@\n         },\r\n         endDate: {\r\n             type: Date // Para sabermos quando a assinatura expira\r\n         },\r\n-        mercadopagoPreapprovalId: { type: String, default: null }\r\n+        mercadopagoPreapprovalId: { type: String, default: null },\r\n+        mercadopagoPaymentIds: [{ type: String }]\r\n     },\r\n \r\n     permissions: {\r\n         Gerente: {\r\n"
                },
                {
                    "date": 1753533039080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,30 @@\n+// D:\\SCripts\\SiteLobos\\Servidor\\models\\Boleto.js\r\n+\r\n const mongoose = require('mongoose');\r\n const Schema = mongoose.Schema;\r\n \r\n-const CompanySchema = new Schema({\r\n-    nomeEmpresa: { type: String, required: true },\r\n-    cnpj: { type: String, required: true, unique: true },\r\n-    senhaEmpresa: { type: String, required: true },\r\n-    email: { type: String, default: '' },\r\n-    telefoneFixo: { type: String, default: '' },\r\n-    telefoneWhatsapp: { type: String, default: '' },\r\n-\r\n-    subscription: {\r\n-        status: {\r\n-            type: String,\r\n-            enum: ['active', 'inactive', 'trial', 'past_due'], // Status possíveis\r\n-            default: 'inactive' // Uma nova empresa começa como inativa\r\n-        },\r\n-        endDate: {\r\n-            type: Date // Para sabermos quando a assinatura expira\r\n-        },\r\n-        mercadopagoPreapprovalId: { type: String, default: null },\r\n-        mercadopagoPaymentIds: [{ type: String }]\r\n+const BoletoSchema = new Schema({\r\n+    name: { type: String, required: true },\r\n+    nfeNumber: { type: String },\r\n+    category: {\r\n+        type: Schema.Types.ObjectId,\r\n+        ref: 'Category',\r\n+        default: null\r\n     },\r\n-\r\n-    permissions: {\r\n-        Gerente: {\r\n-            canCreate: { type: Boolean, default: true },\r\n-            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'all' },\r\n-            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'all' }\r\n-        },\r\n\\ No newline at end of file\n-        Funcionário: {\r\n-            canCreate: { type: Boolean, default: true },\r\n-            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'none' },\r\n-            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'none' }\r\n-        }\r\n-    }\r\n+    user: {\r\n+        type: Schema.Types.ObjectId,\r\n+        ref: 'User',\r\n+        required: true\r\n+    },\r\n+    parcels: [{\r\n+        number: { type: Number, required: true },\r\n+        amount: { type: Number, required: true },\r\n+        dueDate: { type: String, required: true },\r\n+        paid: { type: Boolean, default: false },\r\n+        description: { type: String },\r\n+        barcode: { type: String },\r\n+        attachmentUrl: { type: String, default: null }\r\n+    }]\r\n });\r\n \r\n-module.exports = mongoose.model('Company', CompanySchema);\n+module.exports = mongoose.model('Boleto', BoletoSchema);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753533141913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-// D:\\SCripts\\SiteLobos\\Servidor\\models\\Boleto.js\r\n-\r\n const mongoose = require('mongoose');\r\n const Schema = mongoose.Schema;\r\n \r\n const BoletoSchema = new Schema({\r\n"
                }
            ],
            "date": 1752243348947,
            "name": "Commit-0",
            "content": "const mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\n// Define a estrutura de um boleto e suas parcelas\r\nconst BoletoSchema = new Schema({\r\n    id: { type: String, required: true },\r\n    parentId: { type: String, required: true },\r\n    name: { type: String, required: true },\r\n    ownerUsername: { type: String, required: true },\r\n    parcels: [{\r\n        id: { type: String, required: true },\r\n        number: { type: Number, required: true },\r\n        amount: { type: Number, required: true },\r\n        dueDate: { type: String, required: true },\r\n        paid: { type: Boolean, default: false },\r\n        description: { type: String },\r\n        barcode: { type: String } \r\n    }]\r\n});\r\n\r\n// Define a estrutura de um usuário\r\nconst UserSchema = new Schema({\r\n    username: { type: String, required: true },\r\n    password: { type: String, required: true },\r\n    role: { type: String, enum: ['Proprietário', 'Gerente', 'Funcionário'], default: 'Funcionário' },\r\n    boletos: [BoletoSchema]\r\n});\r\n\r\n// Define a estrutura principal da empresa\r\nconst CompanySchema = new Schema({\r\n    nomeEmpresa: { type: String, required: true },\r\n    cnpj: { type: String, required: true, unique: true },\r\n    senhaEmpresa: { type: String, required: true },\r\n    usuarios: [UserSchema],\r\n    permissions: {\r\n        Gerente: {\r\n            canCreate: { type: Boolean, default: true },\r\n            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'all' },\r\n            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'all' }\r\n        },\r\n        Funcionário: {\r\n            canCreate: { type: Boolean, default: true },\r\n            canUpdate: { type: String, enum: ['none', 'own', 'all'], default: 'none' },\r\n            canDelete: { type: String, enum: ['none', 'own', 'all'], default: 'none' }\r\n        }\r\n    }\r\n});\r\n\r\n// Exporta o modelo para ser usado em outras partes da aplicação\r\nmodule.exports = mongoose.model('Company', CompanySchema);"
        }
    ]
}