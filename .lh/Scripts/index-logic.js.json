{
    "sourceFile": "Scripts/index-logic.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754522360579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754522637602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { API_BASE_URL } from './scripts/config.js';\r\n+import { API_BASE_URL } from './config.js';\r\n \r\n document.addEventListener('DOMContentLoaded', () => {\r\n \r\n     // FUNÇÃO PARA CARREGAR COMPONENTES (HEADER, FOOTER, MODAIS)\r\n"
                }
            ],
            "date": 1754522360579,
            "name": "Commit-0",
            "content": "import { API_BASE_URL } from './scripts/config.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    // FUNÇÃO PARA CARREGAR COMPONENTES (HEADER, FOOTER, MODAIS)\r\n    const loadComponent = (url, placeholder) => {\r\n        const basePath = window.location.pathname.includes('/pages/') ? '../' : '';\r\n        return fetch(basePath + url)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error(`Erro ao carregar ${url}: ${res.statusText}`);\r\n                }\r\n                return res.text();\r\n            })\r\n            .then(data => {\r\n                if (placeholder) {\r\n                    placeholder.innerHTML = data;\r\n                }\r\n            });\r\n    };\r\n\r\n    // CARREGA TODOS OS COMPONENTES PRIMEIRO\r\n    Promise.all([\r\n        loadComponent('components/header.html', document.getElementById(\"header-placeholder\")),\r\n        loadComponent('components/footer.html', document.getElementById(\"footer-placeholder\")),\r\n        loadComponent('components/modals.html', document.getElementById(\"modals-placeholder\"))\r\n    ]).then(async () => {\r\n        // --- TODA A LÓGICA AGORA FICA DENTRO DO .then() ---\r\n\r\n        // 1. ADICIONA O EVENTO DO MENU MOBILE (AGORA O BOTÃO JÁ EXISTE)\r\n        const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n        const mobileMenu = document.getElementById('mobile-menu');\r\n        if (mobileMenuButton && mobileMenu) {\r\n            mobileMenuButton.addEventListener('click', () => {\r\n                mobileMenu.classList.toggle('hidden');\r\n            });\r\n        }\r\n        const copyrightTextElement = document.getElementById('copyright-text');\r\n        if (copyrightTextElement) {\r\n            const currentYear = new Date().getFullYear();\r\n            copyrightTextElement.innerHTML = `&copy; ${currentYear} LobosTI. Todos os direitos reservados.`;\r\n        }\r\n        \r\n        // Carrega o script que controla os modais (Termos de Uso, Privacidade)\r\n        const modalScript = document.createElement('script');\r\n        const basePath = window.location.pathname.includes('/pages/') ? '../' : '';\r\n        modalScript.src = `${basePath}scripts/modals.js`;\r\n        document.body.appendChild(modalScript);\r\n\r\n        // =================================================================================\r\n        // FUNÇÕES GERAIS E DE LÓGICA\r\n        // =================================================================================\r\n        \r\n        /**\r\n         * Atualiza toda a interface do Index.html para um utilizador autenticado.\r\n         * @param {object} user - O objeto do utilizador logado.\r\n         * @param {object} company - O objeto da empresa do utilizador.\r\n         */\r\n        function updateUIForLoggedInUser(user, company) {\r\n            // ATUALIZA A BARRA DE NAVEGAÇÃO (DESKTOP)\r\n            const desktopMenu = document.getElementById('desktop-menu-items');\r\n            const navLoginLink = document.getElementById('nav-login-link');\r\n            if (desktopMenu && navLoginLink && !document.getElementById('desktop-logout-btn')) {\r\n                navLoginLink.textContent = 'Aceder ao Painel';\r\n                navLoginLink.href = 'OrgBoletos.html';\r\n                const logoutButton = document.createElement('button');\r\n                logoutButton.id = 'desktop-logout-btn';\r\n                logoutButton.className = 'bg-red-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-red-700';\r\n                logoutButton.textContent = 'Sair';\r\n                desktopMenu.appendChild(logoutButton);\r\n                logoutButton.addEventListener('click', () => {\r\n                    localStorage.removeItem('authToken');\r\n                    window.location.reload();\r\n                });\r\n            }\r\n\r\n            // ATUALIZA A BARRA DE NAVEGAÇÃO (MOBILE)\r\n            const mobileMenuItems = document.getElementById('mobile-menu-items');\r\n            const mobileLoginLink = document.getElementById('mobile-nav-login-link');\r\n            if (mobileMenuItems && mobileLoginLink && !document.getElementById('mobile-logout-btn')) {\r\n                mobileLoginLink.textContent = 'Aceder ao Painel';\r\n                mobileLoginLink.href = 'OrgBoletos.html';\r\n                const logoutButtonMobile = document.createElement('a');\r\n                logoutButtonMobile.id = 'mobile-logout-btn';\r\n                logoutButtonMobile.href = '#';\r\n                logoutButtonMobile.className = 'bg-red-600 text-white block px-3 py-2 rounded-md text-base font-medium';\r\n                logoutButtonMobile.textContent = 'Sair';\r\n                logoutButtonMobile.addEventListener('click', (e) => {\r\n                    e.preventDefault();\r\n                    localStorage.removeItem('authToken');\r\n                    window.location.reload();\r\n                });\r\n                mobileMenuItems.appendChild(logoutButtonMobile);\r\n            }\r\n\r\n            // ATUALIZA A SECÇÃO DE LOGIN PRINCIPAL\r\n            const loginSectionContent = document.getElementById('login-section-content');\r\n            if (loginSectionContent) {\r\n                loginSectionContent.innerHTML = `\r\n                    <h3 class=\"text-2xl font-bold text-white mb-4 text-center\">Sessão Iniciada</h3>\r\n                    <div class=\"text-center text-gray-300\">\r\n                        <p>Você já está autenticado.</p>\r\n                        <p class=\"mt-2 text-sm\">Para aceder ao sistema, utilize o menu no topo da página ou o card de serviços.</p>\r\n                    </div>\r\n                `;\r\n            }\r\n\r\n            // ATUALIZA O CARD DE SERVIÇO 'ORGANIZADOR DE BOLETOS'\r\n            const boletoCardLink = document.getElementById('boleto-card-link');\r\n            if (boletoCardLink) {\r\n                const subscription = company.subscription;\r\n                const isSubscriptionActive = subscription && subscription.status === 'active' && new Date(subscription.endDate) > new Date();\r\n                \r\n                boletoCardLink.classList.remove('text-yellow-500', 'text-green-500', 'text-red-500');\r\n                boletoCardLink.href = 'OrgBoletos.html';\r\n\r\n                if (user.role === 'Proprietário') {\r\n                    if (isSubscriptionActive) {\r\n                        boletoCardLink.innerHTML = 'Aceder ao Painel <i class=\"fas fa-chevron-right ml-1 text-sm\"></i>';\r\n                        boletoCardLink.classList.add('text-green-500');\r\n                    } else {\r\n                        boletoCardLink.innerHTML = 'Renovar Assinatura <i class=\"fas fa-chevron-right ml-1 text-sm\"></i>';\r\n                        boletoCardLink.classList.add('text-red-500');\r\n                    }\r\n                } else {\r\n                    boletoCardLink.innerHTML = 'Aceder ao Sistema <i class=\"fas fa-chevron-right ml-1 text-sm\"></i>';\r\n                    boletoCardLink.classList.add('text-green-500');\r\n                }\r\n            }\r\n        }\r\n        \r\n        function clearLoginErrors() {\r\n            const fields = ['cnpjError', 'usernameError', 'passwordError', 'mainLoginFormFeedback'];\r\n            fields.forEach(id => {\r\n                const el = document.getElementById(id);\r\n                if (el) el.textContent = '';\r\n            });\r\n        }\r\n        \r\n        // --- ADICIONADO: FUNÇÃO DO EASTER EGG ---\r\n        function activateAdminLogin() {\r\n            const loginStep1 = document.getElementById('login-step-1');\r\n            const loginStep2 = document.getElementById('login-step-2');\r\n            const mainUsernameInput = document.getElementById('mainUsernameInput');\r\n            const mainLoginForm = document.getElementById('mainLoginForm');\r\n            \r\n            if (loginStep1 && loginStep2 && mainUsernameInput && mainLoginForm) {\r\n                document.getElementById('mainCnpjInput').removeAttribute('required');\r\n                mainLoginForm.dataset.isAdmin = \"true\";\r\n                loginStep1.classList.add('hidden');\r\n                mainUsernameInput.previousElementSibling.textContent = 'Usuário Administrador';\r\n                loginStep2.classList.remove('hidden');\r\n                mainUsernameInput.focus();\r\n            }\r\n        }\r\n\r\n\r\n        // 2. VERIFICAÇÃO DE SESSÃO E INICIALIZAÇÃO\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n            // LÓGICA PARA USUÁRIO LOGADO\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/api/auth/me`, { headers: { 'Authorization': `Bearer ${token}` } });\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    updateUIForLoggedInUser(data.user, data.company);\r\n                } else {\r\n                    localStorage.removeItem('authToken');\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Erro ao verificar sessão:\", error);\r\n                localStorage.removeItem('authToken');\r\n            }\r\n        } else {\r\n            // 3. LÓGICA EXECUTADA APENAS SE O USUÁRIO NÃO ESTIVER LOGADO\r\n            \r\n            // --- ADICIONADO: SETUP DO LISTENER DO EASTER EGG ---\r\n            const wolfImageElement = document.querySelector('.animated-wolf');\r\n            if (wolfImageElement) {\r\n                let clickCount = 0;\r\n                let clickTimer = null;\r\n                wolfImageElement.addEventListener('click', () => {\r\n                    if (document.getElementById('mainLoginForm')) {\r\n                        clickCount++;\r\n                        clearTimeout(clickTimer);\r\n                        clickTimer = setTimeout(() => { clickCount = 0; }, 2000);\r\n                        if (clickCount === 7) {\r\n                            activateAdminLogin();\r\n                            clickCount = 0;\r\n                            clearTimeout(clickTimer);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            let cnpjMask, registerCnpjMask, registerWhatsappMask;\r\n            \r\n            // --- Lógica do formulário de Login ---\r\n            const mainLoginForm = document.getElementById('mainLoginForm');\r\n            if (mainLoginForm) {\r\n                const mainCnpjInput = document.getElementById('mainCnpjInput');\r\n                const nextStepBtn = document.getElementById('nextStepBtn');\r\n                const signUpBtn = document.getElementById('signUpBtn');\r\n                const backToStep1Btn = document.getElementById('backToStep1Btn');\r\n                \r\n                cnpjMask = IMask(mainCnpjInput, { mask: '00.000.000/0000-00' });\r\n                \r\n                cnpjMask.on('accept', () => {\r\n                    document.getElementById('mainLoginFormFeedback').textContent = '';\r\n                    signUpBtn.classList.add('hidden');\r\n                });\r\n\r\n                nextStepBtn.addEventListener('click', handleNextStepClick);\r\n                backToStep1Btn.addEventListener('click', handleBackToStep1Click);\r\n                mainLoginForm.addEventListener('submit', handleLoginFormSubmit);\r\n\r\n                async function handleNextStepClick() {\r\n                    const mainLoginFormFeedback = document.getElementById('mainLoginFormFeedback');\r\n                    const signUpBtn = document.getElementById('signUpBtn');\r\n                    const nextStepBtn = document.getElementById('nextStepBtn');\r\n                    const loginStep1 = document.getElementById('login-step-1');\r\n                    const loginStep2 = document.getElementById('login-step-2');\r\n                    \r\n                    mainLoginFormFeedback.textContent = '';\r\n                    signUpBtn.classList.add('hidden');\r\n                    \r\n                    if (!cnpjMask || cnpjMask.unmaskedValue.length !== 14) {\r\n                        mainLoginFormFeedback.textContent = 'Por favor, preencha o CNPJ completo.';\r\n                        return;\r\n                    }\r\n\r\n                    nextStepBtn.disabled = true;\r\n                    nextStepBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Verificando...';\r\n                    try {\r\n                        const response = await fetch(`${API_BASE_URL}/api/auth/find-company-by-cnpj`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ cnpj: cnpjMask.value }) });\r\n                        const result = await response.json();\r\n                        if (!response.ok) { throw new Error(result.message); }\r\n                        loginStep1.classList.add('hidden');\r\n                        loginStep2.classList.remove('hidden');\r\n                    } catch (error) {\r\n                        mainLoginFormFeedback.textContent = error.message;\r\n                        if (error.message && error.message.toLowerCase().includes(\"nenhuma empresa encontrada\")) {\r\n                            signUpBtn.classList.remove('hidden');\r\n                        }\r\n                    } finally {\r\n                        nextStepBtn.disabled = false;\r\n                        nextStepBtn.innerHTML = 'Avançar <i class=\"fas fa-arrow-right ml-2\"></i>';\r\n                    }\r\n                }\r\n                \r\n                function handleBackToStep1Click() {\r\n                    const loginStep1 = document.getElementById('login-step-1');\r\n                    const loginStep2 = document.getElementById('login-step-2');\r\n                    loginStep2.classList.add('hidden');\r\n                    if(cnpjMask) cnpjMask.value = '';\r\n                    loginStep1.classList.remove('hidden');\r\n                    document.getElementById('mainLoginFormFeedback').textContent = '';\r\n                    mainLoginForm.dataset.isAdmin = \"false\";\r\n                    document.getElementById('mainCnpjInput').setAttribute('required', '');\r\n                    clearLoginErrors();\r\n                }\r\n                \r\n                async function handleLoginFormSubmit(e) {\r\n                    e.preventDefault();\r\n                    const mainLoginSubmitBtn = document.getElementById('mainLoginSubmitBtn');\r\n                    const mainUsernameInput = document.getElementById('mainUsernameInput');\r\n                    const mainUserPasswordInput = document.getElementById('mainUserPasswordInput');\r\n                    mainLoginSubmitBtn.disabled = true;\r\n                    mainLoginSubmitBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Verificando...';\r\n                    clearLoginErrors();\r\n                    const isAdminLoginMode = e.target.dataset.isAdmin === \"true\";\r\n\r\n                    const payload = isAdminLoginMode ? \r\n                        { username: mainUsernameInput.value, password: mainUserPasswordInput.value } :\r\n                        { cnpj: cnpjMask.value, username: mainUsernameInput.value, password: mainUserPasswordInput.value };\r\n                    try {\r\n                        const response = await fetch(API_BASE_URL + (isAdminLoginMode ? '/api/auth/login/admin' : '/api/auth/login/direct'), { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n                        const result = await response.json();\r\n                        if (!response.ok) { \r\n                            const error = new Error(result.message || 'Erro de validação.');\r\n                            error.details = result.errors;\r\n                            throw error;\r\n                        }\r\n                        localStorage.setItem('authToken', result.token);\r\n                        window.location.reload();\r\n                    } catch (error) {\r\n                        if (error.details) {\r\n                            error.details.forEach(err => {\r\n                                const errorElement = document.getElementById(`${err.path}Error`);\r\n                                if (errorElement) { errorElement.textContent = err.msg; }\r\n                            });\r\n                        } else {\r\n                            document.getElementById('mainLoginFormFeedback').textContent = error.message || 'Ocorreu um erro.';\r\n                        }\r\n                    } finally {\r\n                        mainLoginSubmitBtn.disabled = false;\r\n                        mainLoginSubmitBtn.innerHTML = 'Entrar no Sistema <i class=\"fas fa-sign-in-alt ml-2\"></i>';\r\n                        e.target.dataset.isAdmin = \"false\";\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // --- Lógica do Modal de Cadastro ---\r\n            const registerModal = document.getElementById('registerModal');\r\n            if (registerModal) {\r\n                const signUpBtn = document.getElementById('signUpBtn');\r\n                const closeRegisterModalBtn = document.getElementById('closeRegisterModalBtn');\r\n                const registerForm = document.getElementById('registerForm');\r\n                const goToRegisterStep2Btn = document.getElementById('goToRegisterStep2Btn');\r\n                const backToRegisterStep1Btn = document.getElementById('backToRegisterStep1Btn');\r\n                const registerCnpjInput = document.getElementById('registerCnpj');\r\n                const registerWhatsappInput = document.getElementById('registerWhatsapp');\r\n\r\n                registerCnpjMask = IMask(registerCnpjInput, { mask: '00.000.000/0000-00' });\r\n                registerWhatsappMask = IMask(registerWhatsappInput, { mask: '(00) 00000-0000' });\r\n\r\n                signUpBtn.addEventListener('click', () => {\r\n                    const mainCnpjInput = document.getElementById('mainCnpjInput');\r\n                    if (mainCnpjInput && registerCnpjMask) { \r\n                        registerCnpjMask.value = mainCnpjInput.value; \r\n                    }\r\n                    registerModal.classList.remove('hidden');\r\n                });\r\n                \r\n                closeRegisterModalBtn.addEventListener('click', () => {\r\n                    registerModal.classList.add('hidden');\r\n                    registerForm.reset();\r\n                });\r\n\r\n                goToRegisterStep2Btn.addEventListener('click', handleGoToRegisterStep2);\r\n                backToRegisterStep1Btn.addEventListener('click', () => {\r\n                    document.getElementById('register-step-2').classList.add('hidden');\r\n                    document.getElementById('register-step-1').classList.remove('hidden');\r\n                });\r\n                registerForm.addEventListener('submit', handleRegisterFormSubmit);\r\n\r\n                function handleGoToRegisterStep2() {\r\n                    const registrationFeedback = document.getElementById('registrationFeedback');\r\n                    registrationFeedback.textContent = '';\r\n                    const companyName = document.getElementById('registerCompanyName').value;\r\n                    const companyEmail = document.getElementById('registerEmail').value;\r\n\r\n                    if (registerCnpjMask && registerCnpjMask.unmaskedValue.length === 14 && companyName.trim() !== '' && companyEmail.trim() !== '' && registerWhatsappMask && registerWhatsappMask.unmaskedValue.length >= 10) {\r\n                        document.getElementById('register-step-1').classList.add('hidden');\r\n                        document.getElementById('register-step-2').classList.remove('hidden');\r\n                    } else {\r\n                        registrationFeedback.textContent = 'Por favor, preencha todos os dados da empresa para avançar.';\r\n                    }\r\n                }\r\n\r\n                async function handleRegisterFormSubmit(e) {\r\n                    e.preventDefault();\r\n                    const password = document.getElementById('ownerPassword').value;\r\n                    const confirmPassword = document.getElementById('ownerConfirmPassword').value;\r\n                    if (password !== confirmPassword) {\r\n                        document.getElementById('passwordConfirmError').textContent = 'As senhas não coincidem.';\r\n                        return;\r\n                    }\r\n                    document.getElementById('passwordConfirmError').textContent = '';\r\n\r\n                    const submitBtn = document.getElementById('submitRegistrationBtn');\r\n                    submitBtn.disabled = true;\r\n                    submitBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Finalizando...';\r\n\r\n                    const registrationFeedback = document.getElementById('registrationFeedback');\r\n                    registrationFeedback.textContent = '';\r\n\r\n                    const payload = {\r\n                        cnpj: registerCnpjMask.unmaskedValue,\r\n                        nomeEmpresa: document.getElementById('registerCompanyName').value,\r\n                        email: document.getElementById('registerEmail').value,\r\n                        telefoneWhatsapp: registerWhatsappMask.unmaskedValue,\r\n                        username: document.getElementById('ownerUsername').value,\r\n                        ownerEmail: document.getElementById('ownerEmail').value,\r\n                        password: password,\r\n                    };\r\n\r\n                    try {\r\n                        const response = await fetch(`${API_BASE_URL}/api/auth/register-company`, { \r\n                            method: 'POST', \r\n                            headers: { 'Content-Type': 'application/json' }, \r\n                            body: JSON.stringify(payload) \r\n                        });\r\n\r\n                        const result = await response.json();\r\n                        if (!response.ok) { throw new Error(result.message || 'Ocorreu um erro no cadastro.'); }\r\n\r\n                        registrationFeedback.className = 'mt-4 text-center text-sm h-5 text-green-400';\r\n                        registrationFeedback.textContent = 'Cadastro realizado com sucesso! Pode fechar e fazer o login.';\r\n\r\n                        setTimeout(() => {\r\n                            closeRegisterModalBtn.click();\r\n                            const mainCnpjInput = document.getElementById('mainCnpjInput');\r\n                            if(mainCnpjInput) {\r\n                                mainCnpjInput.value = payload.cnpj;\r\n                                mainCnpjInput.focus();\r\n                            }\r\n                        }, 3000);\r\n                    } catch (error) {\r\n                        registrationFeedback.className = 'mt-4 text-center text-sm h-5 text-red-400';\r\n                        registrationFeedback.textContent = error.message;\r\n                    } finally {\r\n                        submitBtn.disabled = false;\r\n                        submitBtn.innerHTML = 'Finalizar Cadastro <i class=\"fas fa-check ml-2\"></i>';\r\n                    }\r\n                }\r\n            }\r\n\r\n            // --- Lógica do \"Esqueci minha senha\" ---\r\n            const forgotPasswordModal = document.getElementById('forgotPasswordModal');\r\n            if (forgotPasswordModal) {\r\n                const forgotPasswordBtn = document.getElementById('forgotPasswordBtn');\r\n                const closeForgotPasswordModalBtn = document.getElementById('closeForgotPasswordModalBtn');\r\n                const forgotPasswordForm = document.getElementById('forgotPasswordForm');\r\n\r\n                if (forgotPasswordBtn) {\r\n                    forgotPasswordBtn.addEventListener('click', () => {\r\n                        forgotPasswordModal.classList.remove('hidden');\r\n                        document.getElementById('recoveryEmailInput').focus();\r\n                    });\r\n                }\r\n                if (closeForgotPasswordModalBtn) {\r\n                    closeForgotPasswordModalBtn.addEventListener('click', () => {\r\n                        forgotPasswordModal.classList.add('hidden');\r\n                    });\r\n                }\r\n                if (forgotPasswordForm) {\r\n                    forgotPasswordForm.addEventListener('submit', handleForgotPasswordSubmit);\r\n                }\r\n                \r\n                async function handleForgotPasswordSubmit(e) {\r\n                    e.preventDefault();\r\n                    const recoverySubmitBtn = document.getElementById('recoverySubmitBtn');\r\n                    const recoveryFormFeedback = document.getElementById('recoveryFormFeedback');\r\n                    const email = document.getElementById('recoveryEmailInput').value;\r\n                    \r\n                    recoverySubmitBtn.disabled = true;\r\n                    recoverySubmitBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Enviando...';\r\n                    recoveryFormFeedback.textContent = '';\r\n                    try {\r\n                        const response = await fetch(`${API_BASE_URL}/api/auth/forgot-password`, {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ email })\r\n                        });\r\n                        const result = await response.json();\r\n                        if (!response.ok) { throw new Error(result.message); }\r\n                        recoveryFormFeedback.className = 'mt-4 text-center text-sm h-5 text-green-400';\r\n                        recoveryFormFeedback.textContent = result.message;\r\n                        setTimeout(() => {\r\n                            forgotPasswordModal.classList.add('hidden');\r\n                        }, 4000);\r\n                    } catch (error) {\r\n                        recoveryFormFeedback.className = 'mt-4 text-center text-sm h-5 text-red-400';\r\n                        recoveryFormFeedback.textContent = error.message;\r\n                    } finally {\r\n                        recoverySubmitBtn.disabled = false;\r\n                        recoverySubmitBtn.innerHTML = 'Enviar Link de Recuperação <i class=\"fas fa-paper-plane ml-2\"></i>';\r\n                    }\r\n                }\r\n            }\r\n\r\n            // --- Lógica do formulário de Contato ---\r\n            const contactForm = document.getElementById('contactForm');\r\n            if (contactForm) {\r\n                contactForm.addEventListener('submit', handleContactFormSubmit);\r\n\r\n                async function handleContactFormSubmit(e) {\r\n                    e.preventDefault();\r\n                    const contactSubmitBtn = document.getElementById('contactSubmitBtn');\r\n                    const contactFormFeedback = document.getElementById('contactFormFeedback');\r\n                    contactSubmitBtn.disabled = true;\r\n                    contactSubmitBtn.innerHTML = 'Enviando... <i class=\"fas fa-spinner fa-spin ml-2\"></i>';\r\n                    contactFormFeedback.textContent = '';\r\n                    const payload = {\r\n                        name: document.getElementById('contactName').value,\r\n                        email: document.getElementById('contactEmail').value,\r\n                        subject: document.getElementById('contactSubject').value,\r\n                        message: document.getElementById('contactMessage').value,\r\n                    };\r\n                    try {\r\n                        const response = await fetch(`${API_BASE_URL}/api/contact/send`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload), });\r\n                        const result = await response.json();\r\n                        if (!response.ok) { throw new Error(result.message || 'Ocorreu um erro.'); }\r\n                        contactFormFeedback.className = 'mt-4 text-center text-sm text-green-400';\r\n                        contactFormFeedback.textContent = result.message;\r\n                        contactForm.reset();\r\n                    } catch (error) {\r\n                        contactFormFeedback.className = 'mt-4 text-center text-sm text-red-400';\r\n                        contactFormFeedback.textContent = error.message;\r\n                    } finally {\r\n                        contactSubmitBtn.disabled = false;\r\n                        contactSubmitBtn.innerHTML = 'Enviar Mensagem <i class=\"fas fa-paper-plane ml-2\"></i>';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }).catch(error => console.error(\"Erro crítico ao carregar componentes:\", error));\r\n});"
        }
    ]
}